// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plugin.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	plugin.proto

It has these top-level messages:
	ExecuteReq
	ExecuteResp
	GetAttributesReq
	GetAttributesResp
	Instance
	SetAttributesReq
	SetAttributesResp
	Action
	Device
	Empty
	State
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ExecuteReq struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	Cmd      string `protobuf:"bytes,2,opt,name=cmd" json:"cmd,omitempty"`
	Data     []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ExecuteReq) Reset()                    { *m = ExecuteReq{} }
func (m *ExecuteReq) String() string            { return proto1.CompactTextString(m) }
func (*ExecuteReq) ProtoMessage()               {}
func (*ExecuteReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ExecuteReq) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *ExecuteReq) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *ExecuteReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ExecuteResp struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ExecuteResp) Reset()                    { *m = ExecuteResp{} }
func (m *ExecuteResp) String() string            { return proto1.CompactTextString(m) }
func (*ExecuteResp) ProtoMessage()               {}
func (*ExecuteResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ExecuteResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ExecuteResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ExecuteResp) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetAttributesReq struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
}

func (m *GetAttributesReq) Reset()                    { *m = GetAttributesReq{} }
func (m *GetAttributesReq) String() string            { return proto1.CompactTextString(m) }
func (*GetAttributesReq) ProtoMessage()               {}
func (*GetAttributesReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetAttributesReq) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

type GetAttributesResp struct {
	Success   bool        `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Error     string      `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Instances []*Instance `protobuf:"bytes,3,rep,name=instances" json:"instances,omitempty"`
}

func (m *GetAttributesResp) Reset()                    { *m = GetAttributesResp{} }
func (m *GetAttributesResp) String() string            { return proto1.CompactTextString(m) }
func (*GetAttributesResp) ProtoMessage()               {}
func (*GetAttributesResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetAttributesResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetAttributesResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GetAttributesResp) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

type Instance struct {
	Identity   string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	InstanceId int32  `protobuf:"varint,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	Attributes []byte `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Type       string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto1.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Instance) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *Instance) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *Instance) GetAttributes() []byte {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Instance) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type SetAttributesReq struct {
	Identity string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *SetAttributesReq) Reset()                    { *m = SetAttributesReq{} }
func (m *SetAttributesReq) String() string            { return proto1.CompactTextString(m) }
func (*SetAttributesReq) ProtoMessage()               {}
func (*SetAttributesReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SetAttributesReq) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *SetAttributesReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SetAttributesResp struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *SetAttributesResp) Reset()                    { *m = SetAttributesResp{} }
func (m *SetAttributesResp) String() string            { return proto1.CompactTextString(m) }
func (*SetAttributesResp) ProtoMessage()               {}
func (*SetAttributesResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SetAttributesResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SetAttributesResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Action struct {
	Identity   string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	InstanceId int32  `protobuf:"varint,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	Attributes []byte `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto1.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Action) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *Action) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *Action) GetAttributes() []byte {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type Device struct {
	Identity     string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	Model        string `protobuf:"bytes,2,opt,name=model" json:"model,omitempty"`
	Manufacturer string `protobuf:"bytes,3,opt,name=manufacturer" json:"manufacturer,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto1.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Device) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *Device) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Device) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto1.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type State struct {
	Identity   string `protobuf:"bytes,1,opt,name=identity" json:"identity,omitempty"`
	InstanceId int32  `protobuf:"varint,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	Attributes []byte `protobuf:"bytes,3,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (m *State) Reset()                    { *m = State{} }
func (m *State) String() string            { return proto1.CompactTextString(m) }
func (*State) ProtoMessage()               {}
func (*State) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *State) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *State) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *State) GetAttributes() []byte {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func init() {
	proto1.RegisterType((*ExecuteReq)(nil), "proto.ExecuteReq")
	proto1.RegisterType((*ExecuteResp)(nil), "proto.ExecuteResp")
	proto1.RegisterType((*GetAttributesReq)(nil), "proto.GetAttributesReq")
	proto1.RegisterType((*GetAttributesResp)(nil), "proto.GetAttributesResp")
	proto1.RegisterType((*Instance)(nil), "proto.Instance")
	proto1.RegisterType((*SetAttributesReq)(nil), "proto.SetAttributesReq")
	proto1.RegisterType((*SetAttributesResp)(nil), "proto.SetAttributesResp")
	proto1.RegisterType((*Action)(nil), "proto.Action")
	proto1.RegisterType((*Device)(nil), "proto.device")
	proto1.RegisterType((*Empty)(nil), "proto.empty")
	proto1.RegisterType((*State)(nil), "proto.state")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Plugin service

type PluginClient interface {
	Discover(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Plugin_DiscoverClient, error)
	StateChange(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Plugin_StateChangeClient, error)
	GetAttributes(ctx context.Context, in *GetAttributesReq, opts ...grpc.CallOption) (*GetAttributesResp, error)
	SetAttributes(ctx context.Context, in *SetAttributesReq, opts ...grpc.CallOption) (*SetAttributesResp, error)
}

type pluginClient struct {
	cc *grpc.ClientConn
}

func NewPluginClient(cc *grpc.ClientConn) PluginClient {
	return &pluginClient{cc}
}

func (c *pluginClient) Discover(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Plugin_DiscoverClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Plugin_serviceDesc.Streams[0], c.cc, "/proto.Plugin/Discover", opts...)
	if err != nil {
		return nil, err
	}
	x := &pluginDiscoverClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Plugin_DiscoverClient interface {
	Recv() (*Device, error)
	grpc.ClientStream
}

type pluginDiscoverClient struct {
	grpc.ClientStream
}

func (x *pluginDiscoverClient) Recv() (*Device, error) {
	m := new(Device)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pluginClient) StateChange(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Plugin_StateChangeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Plugin_serviceDesc.Streams[1], c.cc, "/proto.Plugin/StateChange", opts...)
	if err != nil {
		return nil, err
	}
	x := &pluginStateChangeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Plugin_StateChangeClient interface {
	Recv() (*State, error)
	grpc.ClientStream
}

type pluginStateChangeClient struct {
	grpc.ClientStream
}

func (x *pluginStateChangeClient) Recv() (*State, error) {
	m := new(State)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pluginClient) GetAttributes(ctx context.Context, in *GetAttributesReq, opts ...grpc.CallOption) (*GetAttributesResp, error) {
	out := new(GetAttributesResp)
	err := grpc.Invoke(ctx, "/proto.Plugin/GetAttributes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pluginClient) SetAttributes(ctx context.Context, in *SetAttributesReq, opts ...grpc.CallOption) (*SetAttributesResp, error) {
	out := new(SetAttributesResp)
	err := grpc.Invoke(ctx, "/proto.Plugin/SetAttributes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Plugin service

type PluginServer interface {
	Discover(*Empty, Plugin_DiscoverServer) error
	StateChange(*Empty, Plugin_StateChangeServer) error
	GetAttributes(context.Context, *GetAttributesReq) (*GetAttributesResp, error)
	SetAttributes(context.Context, *SetAttributesReq) (*SetAttributesResp, error)
}

func RegisterPluginServer(s *grpc.Server, srv PluginServer) {
	s.RegisterService(&_Plugin_serviceDesc, srv)
}

func _Plugin_Discover_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PluginServer).Discover(m, &pluginDiscoverServer{stream})
}

type Plugin_DiscoverServer interface {
	Send(*Device) error
	grpc.ServerStream
}

type pluginDiscoverServer struct {
	grpc.ServerStream
}

func (x *pluginDiscoverServer) Send(m *Device) error {
	return x.ServerStream.SendMsg(m)
}

func _Plugin_StateChange_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PluginServer).StateChange(m, &pluginStateChangeServer{stream})
}

type Plugin_StateChangeServer interface {
	Send(*State) error
	grpc.ServerStream
}

type pluginStateChangeServer struct {
	grpc.ServerStream
}

func (x *pluginStateChangeServer) Send(m *State) error {
	return x.ServerStream.SendMsg(m)
}

func _Plugin_GetAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttributesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).GetAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/GetAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).GetAttributes(ctx, req.(*GetAttributesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Plugin_SetAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAttributesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PluginServer).SetAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Plugin/SetAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PluginServer).SetAttributes(ctx, req.(*SetAttributesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Plugin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Plugin",
	HandlerType: (*PluginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAttributes",
			Handler:    _Plugin_GetAttributes_Handler,
		},
		{
			MethodName: "SetAttributes",
			Handler:    _Plugin_SetAttributes_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Discover",
			Handler:       _Plugin_Discover_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "StateChange",
			Handler:       _Plugin_StateChange_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "plugin.proto",
}

func init() { proto1.RegisterFile("plugin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0x5f, 0x6f, 0xd3, 0x30,
	0x14, 0xc5, 0x95, 0x65, 0xc9, 0xd2, 0x9b, 0x4c, 0x74, 0xd6, 0x24, 0xa2, 0x3e, 0x40, 0xe5, 0xa7,
	0x22, 0x44, 0x35, 0x8d, 0x4f, 0xb0, 0x0d, 0x84, 0xf6, 0x82, 0x20, 0x79, 0x07, 0x79, 0xce, 0xa5,
	0x58, 0x6a, 0xfe, 0x60, 0xdf, 0x54, 0x54, 0x7c, 0x61, 0x3e, 0x06, 0x8a, 0xf3, 0x87, 0xb6, 0x14,
	0x2a, 0x40, 0x7d, 0x8a, 0xcf, 0xf1, 0xcd, 0xd1, 0xc9, 0x2f, 0x36, 0x44, 0xd5, 0xb2, 0x5e, 0xa8,
	0x62, 0x5e, 0xe9, 0x92, 0x4a, 0xe6, 0xd9, 0x07, 0x7f, 0x0b, 0xf0, 0xfa, 0x2b, 0xca, 0x9a, 0x30,
	0xc1, 0x2f, 0x6c, 0x02, 0x81, 0xca, 0xb0, 0x20, 0x45, 0xeb, 0xd8, 0x99, 0x3a, 0xb3, 0x51, 0x32,
	0x68, 0x36, 0x06, 0x57, 0xe6, 0x59, 0x7c, 0x62, 0xed, 0x66, 0xc9, 0x18, 0x9c, 0x66, 0x82, 0x44,
	0xec, 0x4e, 0x9d, 0x59, 0x94, 0xd8, 0x35, 0x7f, 0x0f, 0xe1, 0x90, 0x67, 0x2a, 0x16, 0xc3, 0x99,
	0xa9, 0xa5, 0x44, 0x63, 0x6c, 0x5e, 0x90, 0xf4, 0x92, 0x5d, 0x82, 0x87, 0x5a, 0x97, 0xba, 0x0b,
	0x6c, 0xc5, 0xde, 0xc8, 0x39, 0x8c, 0xdf, 0x20, 0xdd, 0x10, 0x69, 0xf5, 0x50, 0x13, 0x9a, 0x03,
	0x45, 0xb9, 0x86, 0x8b, 0x9d, 0xf9, 0x7f, 0x28, 0xf2, 0x02, 0x46, 0xaa, 0x30, 0x24, 0x0a, 0x89,
	0x26, 0x76, 0xa7, 0xee, 0x2c, 0xbc, 0x7e, 0xd4, 0x92, 0x9b, 0xdf, 0x77, 0x7e, 0xf2, 0x73, 0x82,
	0x7f, 0x83, 0xa0, 0xb7, 0xff, 0x08, 0xf1, 0x29, 0x84, 0xfd, 0x4b, 0x1f, 0x55, 0x0b, 0xd3, 0x4b,
	0xa0, 0xb7, 0xee, 0x33, 0xf6, 0x04, 0x40, 0x0c, 0xcd, 0x3b, 0x0c, 0x1b, 0x4e, 0x03, 0x88, 0xd6,
	0x15, 0xc6, 0xa7, 0x36, 0xd8, 0xae, 0xf9, 0x2d, 0x8c, 0xd3, 0xbf, 0x00, 0x34, 0x40, 0x3e, 0xd9,
	0x80, 0x7c, 0x07, 0x17, 0xe9, 0xff, 0x42, 0xe3, 0x08, 0xfe, 0x8d, 0x24, 0x55, 0x16, 0x47, 0x65,
	0xc0, 0x3f, 0x80, 0x9f, 0xe1, 0x4a, 0x1d, 0x40, 0x7d, 0x09, 0x5e, 0x5e, 0x66, 0xb8, 0xec, 0x2b,
	0x5a, 0xc1, 0x38, 0x44, 0xb9, 0x28, 0xea, 0x4f, 0x42, 0x52, 0xad, 0x51, 0xdb, 0xf4, 0x51, 0xb2,
	0xe5, 0xf1, 0x33, 0xf0, 0x30, 0xaf, 0x68, 0xcd, 0x33, 0xf0, 0x0c, 0x09, 0x3a, 0xee, 0x2f, 0xbd,
	0xfe, 0xee, 0x80, 0xff, 0xce, 0x5e, 0x4d, 0xf6, 0x0c, 0x82, 0x57, 0xca, 0xc8, 0x72, 0x85, 0x9a,
	0x45, 0xdd, 0x71, 0xb3, 0x55, 0x26, 0xe7, 0x9d, 0x6a, 0x3f, 0xfc, 0xca, 0x61, 0xcf, 0x21, 0x4c,
	0x9b, 0x6e, 0x77, 0x9f, 0x45, 0xb1, 0xc0, 0x9d, 0xe9, 0x5e, 0xd9, 0xf6, 0x57, 0x0e, 0xbb, 0x85,
	0xf3, 0xad, 0x2b, 0xc1, 0x1e, 0x77, 0x03, 0xbb, 0x17, 0x6b, 0x12, 0xef, 0xdf, 0x30, 0x55, 0x93,
	0x91, 0xee, 0xcd, 0x48, 0x7f, 0x97, 0xf1, 0xcb, 0x81, 0x7a, 0xf0, 0xed, 0xc6, 0xcb, 0x1f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xf7, 0xfe, 0x25, 0xe3, 0x8b, 0x04, 0x00, 0x00,
}
